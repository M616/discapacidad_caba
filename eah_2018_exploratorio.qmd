---
title: "EAH 2018 - Módulo discapacidad"
subtitle: "Análisis exploratorio"
author: "Marcos May"
format: html
editor: visual
---

::: {style="position: absolute; top: 10px; right: 10px;"}
<img src="https://www.estadisticaciudad.gob.ar/eyc/wp-content/uploads/2024/07/logo-BA-Azul.png" width="150"/>
:::

```{r , setup, include=FALSE, echo=FALSE}
{library(tidyverse)
library(survey)
library(srvyr)
library(ggthemes)
library(kableExtra)
}
```

```{r carga_base, include=FALSE, echo=FALSE}
enlace <- 'https://www.estadisticaciudad.gob.ar/eyc/wp-content/uploads/2019/12/eah2018_bu_ampliada.zip'
temp_dir <- tempdir()
temp_zip <- file.path(temp_dir, "archivo_descargado.zip")
download.file(url = enlace, 
              destfile = temp_zip, 
              method = "auto", 
              mode = "wb") # 'wb' para Windows, importante para archivos binarios

unzip(zipfile = temp_zip, exdir = temp_dir)

archivos_descomprimidos <- list.files(temp_dir, full.names = TRUE)
archivos_descomprimidos

base <- 
  read_delim(archivos_descomprimidos[grep("eah2018_bu_ampliada_ind.txt", archivos_descomprimidos)],
             delim = ';')

base_survey <- 
  base %>%
  as_survey(weights = fexp)
```

Incidencia sobre población total

```{r incidencia_total, echo= FALSE, message = FALSE  , warning =FALSE}

base_survey <- 
  base_survey %>%
  mutate( alguna_dificultad = case_when(dd_con_dif == 1 ~ 'si',
                                        TRUE ~ 'no')) 

base_survey |> 
  group_by(alguna_dificultad) %>%
  summarise(prop = round(survey_prop(level = 0.95, 
                               vartype = 'cv')
            *100)) |>  kableExtra::kable()

```

Incidencia poblacion mayor a 5

```{r incidencia>5, echo= FALSE, message = FALSE  , warning =FALSE}

base_survey |> 
  filter(edad > 5 ) |> 
  group_by(alguna_dificultad) %>%
  summarise(prop = round(survey_prop( level = 0.95, 
                               vartype = 'cv')*100),
            Total = survey_total( level = 0.95, 
                               vartype = 'cv')) |>
  select(-Total_cv) |> 
  kableExtra::kable()
```

Población mayor a 6. Proporcion de personas con al menos una dificultad que tiene certificado de discapacidad

```{r proporcion_certificado, echo=FALSE}

base_survey <- 
  base_survey %>%
  mutate(certificado = 
           case_when (dd15 == 1 ~ 'si',
                      dd15 == 9 ~ NA_character_,
                      TRUE ~ 'no') )

base_survey |> 
  filter(edad > 5 & alguna_dificultad == 'si' ) |> 
  group_by(certificado) %>%
  summarise(prop = round(survey_prop( level = 0.95, 
                               vartype = 'cv')*100))|> kableExtra::kable()

```

Tipo de certificado

```{r tipo_certificado, echo=FALSE}
#base_survey <- 
  base_survey |> 
  filter(d2a %in% c(1,2) ) |> # 1 es cud, 2 es no cud
  mutate(tipo_certificado = case_when(d2a == 1 ~ 'CUD',
                                      TRUE ~ 'Otro')) |> 
  group_by(tipo_certificado) |> 
  summarise(porcentaje = round(survey_prop( level = 0.95, 
                               vartype = 'cv')*100))|> kableExtra::kable()

```

De las personas con certificado (91 mil), el 85% (78 mil) de las personas tiene CUD

```{r tipo_dificultad, echo=FALSE}

#### tipo dificultad
base_survey <- 
  base_survey |> 
  #filter( dd_tipo_dif != 0  ) |> 
  mutate(tipo_dificultad = case_when( dd_tipo_dif == 1  ~ 'Sólo dificultad motora',
                                      dd_tipo_dif == 2  ~ 'Sólo dificultad visual',
                                      dd_tipo_dif == 3  ~ 'Sólo dificultad auditiva',
                                      dd_tipo_dif == 4  ~ 'Sólo dificultad del habla y comunicación',
                                      dd_tipo_dif == 5  ~ 'Sólo dificultad mental cognitiva',
                                      dd_tipo_dif == 6  ~ 'Sólo dificultad del cuidado de sí mismo',
                                      dd_tipo_dif == 7  ~ 'Sólo certificado de discapacidad',
                                      dd_tipo_dif == 8  ~ '2 dificultades',
                                      dd_tipo_dif == 9  ~ '3 o más dificultades'))



###### tipo de dificultad ####
df_plot <- 
  as.data.frame(svytable(~tipo_dificultad, 
                         design = base_survey))

colnames(df_plot) <- c("tipo_dificultad", "n")

# Calcular porcentaje
df_plot <- df_plot %>%
  mutate(percentage = (n / sum(n)) * 100) %>%  # Convertir a porcentaje
  arrange(desc(n))

# Crear el gráfico
ggplot(df_plot, 
       aes(y = reorder(tipo_dificultad, n),
           x = n, 
           fill = tipo_dificultad)) +
  geom_bar(stat = "identity", fill = "#003f5c", show.legend = FALSE) +
  geom_text(aes(label = paste0(round(percentage), "%")),  # Etiquetas con porcentaje
            hjust = -0.1, size = 5)+
  scale_fill_viridis_d() +  
  labs(
    title = "Distribución de Tipos de Dificultades",
    y = "Tipo de Dificultad",
    x = "Cantidad de personas"
  ) +
  theme_economist (base_size = 14) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas si fuera necesario

```
